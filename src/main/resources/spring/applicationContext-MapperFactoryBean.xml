<?xml version='1.0' encoding='UTF-8' ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tool="http://www.springframework.org/schema/tool"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tool
	http://www.springframework.org/schema/tool/spring-tool.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 配置扫描的包 与 springmvc.xml 相结合，解决创建两次bean实例问题-->
    <!-- 配置包扫描器  限制不扫描Handle的注解@Controller和异常处理的注解@ControllerAdvice-->
    <context:component-scan base-package="com.cn.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--使用注解驱动-->
    <context:annotation-config/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="root"/>
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis001" />
    </bean>

    <!--集成mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
    </bean>
    <!--配置数据源事务管理器-->
    <bean id="transcationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--使用注解定义事务-->
    <tx:annotation-driven transaction-manager="transcationManager"/>

    <!--集成 activiti-->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置事务管理器，统一事务 -->
        <property name="transactionManager" ref="transcationManager" />
        <!-- 设置建表策略 -->
        <property name="databaseSchemaUpdate" value="true" />
    </bean>

    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
        <!--bean id repositoryService-->
        <!--RepositoryServicie repositoryService = processEngine.getRepositoryService();-->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
    <!-- 流程相关的Service -->
    <!--<bean id="workflowService" class="activitiweb.service.impl.WorkflowServiceImpl">-->
        <!--<property name="repositoryService" ref="repositoryService"></property>-->
        <!--<property name="runtimeService" ref="runtimeService"></property>-->
        <!--<property name="taskService" ref="taskService"></property>-->
        <!--<property name="formService" ref="formService"></property>-->
        <!--<property name="historyService" ref="historyService"></property>-->
    <!--</bean>-->


    <!--采用自动扫描方式创建mapper bean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cn" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 指定标注才扫描成为Mapper -->
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
    </bean>



    <!--引入 redis 配置文件-->
    <import resource="spring-redis.xml" />


    <beans profile="dev">
        <context:property-placeholder location="classpath*:db.properties"/>
    </beans>
</beans>